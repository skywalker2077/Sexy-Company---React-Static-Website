name: Test Workflows

# Workflow para testar se os outros workflows est√£o funcionando
on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of test to run'
        required: true
        default: 'basic'
        type: choice
        options:
          - basic
          - full

jobs:
  test-setup:
    name: Test GitHub Actions Setup
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üîç Verify workflow files
      run: |
        echo "üîç Checking GitHub Actions workflow files..."
        
        WORKFLOWS_DIR=".github/workflows"
        
        if [ -d "$WORKFLOWS_DIR" ]; then
          echo "‚úÖ Workflows directory exists"
          
          echo "üìÑ Available workflow files:"
          ls -la $WORKFLOWS_DIR/
          
          # Verificar workflows espec√≠ficos
          REQUIRED_WORKFLOWS=("ci.yml" "build-and-deploy.yml" "quality-check.yml" "deploy-s3.yml")
          
          for workflow in "${REQUIRED_WORKFLOWS[@]}"; do
            if [ -f "$WORKFLOWS_DIR/$workflow" ]; then
              echo "‚úÖ $workflow found"
            else
              echo "‚ùå $workflow missing"
            fi
          done
          
        else
          echo "‚ùå Workflows directory not found"
          exit 1
        fi
        
    - name: üü¢ Setup Node.js (Test Dependencies)
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: üì¶ Test dependency installation
      run: |
        echo "üì¶ Testing npm install..."
        npm ci
        echo "‚úÖ Dependencies installed successfully"
        
    - name: üèóÔ∏è Test build process
      run: |
        echo "üèóÔ∏è Testing build process..."
        npm run build
        echo "‚úÖ Build completed successfully"
        
        echo "üìä Build output analysis:"
        ls -la build/
        
        # Verificar arquivos cr√≠ticos
        if [ -f "build/index.html" ]; then
          echo "‚úÖ index.html generated"
        else
          echo "‚ùå index.html not found"
        fi
        
        if [ -d "build/static" ]; then
          echo "‚úÖ Static assets directory created"
          
          # Contar arquivos JS e CSS
          JS_COUNT=$(find build/static -name "*.js" | wc -l)
          CSS_COUNT=$(find build/static -name "*.css" | wc -l)
          
          echo "üìÑ Generated $JS_COUNT JavaScript files"
          echo "üìÑ Generated $CSS_COUNT CSS files"
        else
          echo "‚ùå Static assets directory not found"
        fi
        
    - name: ‚öôÔ∏è Test workflow configuration
      run: |
        echo "‚öôÔ∏è Testing workflow configurations..."
        
        # Verificar sintaxe YAML dos workflows
        echo "üîç Checking YAML syntax..."
        
        for workflow in .github/workflows/*.yml .github/workflows/*.yaml; do
          if [ -f "$workflow" ]; then
            echo "Checking $(basename "$workflow")..."
            
            # Verifica√ß√£o b√°sica de sintaxe YAML  
            if command -v node &> /dev/null; then
              # Usar Node.js para validar YAML b√°sico
              node -e "
                const fs = require('fs');
                try {
                  const content = fs.readFileSync('$workflow', 'utf8');
                  // Verifica√ß√£o b√°sica de estrutura
                  if (content.includes('name:') && content.includes('on:')) {
                    console.log('‚úÖ Basic YAML structure valid');
                  } else {
                    console.log('‚ö†Ô∏è Missing required workflow keys');
                  }
                } catch (e) {
                  console.log('‚ùå Error reading workflow file');
                }
              "
            else
              echo "‚ÑπÔ∏è Node.js validation skipped"
            fi
          fi
        done
        
    - name: üìã Generate test report
      run: |
        echo "üìã GitHub Actions Setup Test Report"
        echo "=================================="
        echo "Date: $(date)"
        echo "Repository: $GITHUB_REPOSITORY"
        echo "Branch: $GITHUB_REF_NAME"
        echo "Commit: $GITHUB_SHA"
        echo ""
        echo "‚úÖ Workflow files: Present"
        echo "‚úÖ Dependencies: OK"
        echo "‚úÖ Build process: OK"
        echo "‚úÖ File generation: OK"
        echo ""
        echo "üéâ GitHub Actions setup is ready!"
        echo ""
        echo "Next steps:"
        echo "1. Configure AWS credentials in repository secrets"
        echo "2. Set up S3 bucket for deployment"
        echo "3. Configure CloudFront distribution (optional)"
        echo "4. Test deployment workflow"
        
    - name: üìù Check documentation
      run: |
        echo "üìù Checking documentation files..."
        
        if [ -f ".github/GITHUB_ACTIONS_SETUP.md" ]; then
          echo "‚úÖ GitHub Actions setup guide found"
        else
          echo "‚ùå Setup guide missing"
        fi
        
        if [ -f "README.md" ]; then
          echo "‚úÖ README.md found"
          
          # Verificar se README menciona GitHub Actions
          if grep -q "GitHub Actions" README.md; then
            echo "‚úÖ README includes GitHub Actions information"
          else
            echo "‚ÑπÔ∏è Consider adding GitHub Actions info to README"
          fi
        else
          echo "‚ùå README.md missing"
        fi