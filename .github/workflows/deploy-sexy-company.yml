name: Deploy to S3 - Sexy Company

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  AWS_REGION: 'us-east-1'
  S3_BUCKET_NAME: 'sexy-company'

jobs:
  deploy-sexy-company:
    name: Deploy to S3 Bucket (sexy-company)
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: |
        echo "📦 Installing dependencies..."
        npm ci
        
    - name: 🏗️ Build React application
      run: |
        echo "🏗️ Building React application..."
        npm run build
        
    - name: 📊 Verify build output
      run: |
        echo "📊 Verifying build artifacts..."
        ls -la build/
        
        # Verificar arquivos essenciais
        if [ -f "build/index.html" ]; then
          echo "✅ index.html found"
        else
          echo "❌ index.html missing"
          exit 1
        fi
        
        if [ -d "build/static" ]; then
          echo "✅ static directory found"
          echo "📄 Static files:"
          find build/static -type f | head -10
        else
          echo "❌ static directory missing"
          exit 1
        fi
        
        # Mostrar tamanho do build
        BUILD_SIZE=$(du -sh build/ | cut -f1)
        echo "📏 Build size: $BUILD_SIZE"
        
    - name: 🔧 Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: 🚀 Deploy to S3 (sexy-company bucket)
      run: |
        echo "🚀 Starting deploy to S3 bucket: $S3_BUCKET_NAME"
        
        # Comando principal conforme solicitado
        aws s3 sync build/ s3://$S3_BUCKET_NAME --delete
        
        echo "✅ Successfully deployed using: aws s3 sync build/ s3://$S3_BUCKET_NAME --delete"
        
    - name: 🔧 Configure S3 bucket for static website hosting
      run: |
        echo "🔧 Configuring S3 bucket for static website hosting..."
        
        # Configurar website hosting
        aws s3 website s3://$S3_BUCKET_NAME \
          --index-document index.html \
          --error-document index.html
          
        echo "✅ S3 website hosting configured"
        
    - name: 🔒 Set bucket policy for public access
      run: |
        echo "🔒 Setting bucket policy for public read access..."
        
        # Criar política de bucket para acesso público
        cat > bucket-policy.json << EOF
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PublicReadGetObject",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": "arn:aws:s3:::$S3_BUCKET_NAME/*"
            }
          ]
        }
        EOF
        
        # Aplicar política
        aws s3api put-bucket-policy --bucket $S3_BUCKET_NAME --policy file://bucket-policy.json
        
        echo "✅ Bucket policy applied successfully"
        
    - name: ⚡ Invalidate CloudFront (if configured)
      run: |
        if [ ! -z "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
          echo "⚡ Invalidating CloudFront cache..."
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
          echo "✅ CloudFront cache invalidated"
        else
          echo "ℹ️ No CloudFront distribution ID configured, skipping invalidation"
        fi
        
    - name: 🌐 Display deployment URLs
      run: |
        echo "🎉 Deployment completed successfully!"
        echo ""
        echo "📋 Deployment Summary:"
        echo "====================="
        echo "🪣 S3 Bucket: $S3_BUCKET_NAME"
        echo "📦 Build Size: $(du -sh build/ | cut -f1)"
        echo "📅 Deployed at: $(date)"
        echo ""
        echo "🌐 Access URLs:"
        echo "• S3 Website URL: http://$S3_BUCKET_NAME.s3-website-$AWS_REGION.amazonaws.com"
        echo "• S3 Direct URL: https://$S3_BUCKET_NAME.s3.amazonaws.com/index.html"
        
        if [ ! -z "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
          echo "• CloudFront URL: Configure CLOUDFRONT_URL variable for custom domain"
        fi
        
        echo ""
        echo "🔧 Next steps:"
        echo "1. Test the website using the URLs above"
        echo "2. Configure custom domain (optional)"
        echo "3. Set up CloudFront for better performance (optional)"

  # Job de verificação pós-deploy
  verify-deployment:
    name: Verify S3 Deployment
    runs-on: ubuntu-latest
    needs: deploy-sexy-company
    if: success()
    
    steps:
    - name: 🔍 Test S3 website endpoint
      run: |
        S3_WEBSITE_URL="http://sexy-company.s3-website-us-east-1.amazonaws.com"
        
        echo "🔍 Testing S3 website endpoint: $S3_WEBSITE_URL"
        
        # Aguardar um momento para propagação
        echo "⏳ Waiting for S3 propagation..."
        sleep 10
        
        # Testar se o site está acessível
        if curl -f -s -L "$S3_WEBSITE_URL" > /dev/null; then
          echo "✅ S3 website endpoint is accessible"
          
          # Verificar se contém o título correto
          if curl -s -L "$S3_WEBSITE_URL" | grep -q "Sexy Company"; then
            echo "✅ Website content verification passed"
          else
            echo "⚠️ Website content verification failed - title not found"
          fi
          
        else
          echo "❌ S3 website endpoint is not accessible"
          echo "ℹ️ This might be normal for first deployment - check manually"
        fi
        
    - name: 📊 Deployment status report
      run: |
        echo "📊 Final Deployment Report"
        echo "========================="
        echo "✅ Build: Success"
        echo "✅ S3 Upload: Success" 
        echo "✅ Bucket Configuration: Success"
        echo "✅ Public Access: Configured"
        echo ""
        echo "🎉 Sexy Company website deployed successfully!"
        echo ""
        echo "Access your site at:"
        echo "http://sexy-company.s3-website-us-east-1.amazonaws.com"